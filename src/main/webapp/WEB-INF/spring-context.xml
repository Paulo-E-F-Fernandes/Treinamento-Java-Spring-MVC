<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- Pacote base da aplicação para que o Spring MVC consiga encontrar os fontes. -->					
	<context:component-scan base-package="br.com.treinamento.springMVC" />
	
	<!-- Usaremos o Spring MVC configurando-o através de xml e anotações -->
	<mvc:annotation-driven />

	<!-- Como foi configurado no web.xml que qualquer requisição que chegar 
		será tratada pelo Spring MVC, precisamos colocar a tag abaixo para que o 
		Spring saiba que toda a requisição começando com resources/ está requisição 
		não será para uma action e sim para um recurso, um arquivo JS, uma imagem, 
		etc. -->
	<mvc:default-servlet-handler/>
	
	<!-- Indica para o Spring MVC o local que os arquivos .jsp ficaram. -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Quando criamos um conversor no Spring MVC é necessário configurar o 
		spring-context para que o Spring encontre o Converter criado. A configuração 
		é feita conforme a entrada abaixo. O nome classe pode ser obtido na documentação -->	
	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="br.com.treinamento.springMVC.StringToEnumConverterFactory" />
			</list>
		</property>
	</bean>
	
</beans>